#!/bin/bash

FIX_MODE=0
REVIEW_MODE=0
SIMULATE_MODE=0

function showHelpAndQuit()
{
  >&2 echo "Run clang-format in-place on all {c,h}pp files."
  >&2 echo
  >&2 echo "Usage: $0 <fix|review|simulate>"
  >&2 echo
  >&2 echo "  [fix]     : Fix the style in-place."
  >&2 echo "  [review]  : Review the differences (with Vim) clang-format would make."
  >&2 echo "  [sumulate]: Output the differences clang-format would make to stdout."
  >&2 echo
  exit 1
}

function parseCommandline()
{
  if [ $# -eq 1 ]
  then
    if [[ "$1" == "fix" ]]
    then
      FIX_MODE=1
    elif [[ "$1" == "review" ]]
    then
      REVIEW_MODE=1
    elif [[ "$1" == "simulate" ]]
    then
      SIMULATE_MODE=1
    else
      showHelpAndQuit
    fi
  else
    showHelpAndQuit
  fi
}

function checkForConfigurationFile()
{
  if [ ! -f ./.clang-format ]
  then
    >&2 echo "No .clang-format file found in this directory, aborting."
    exit 1
  fi
}

function runClangFormat()
{
  FILE_LIST=$(mktemp)
  find source/ -type f -name "*.[ch]pp" >  ${FILE_LIST}
  find tests/ -type f -name "*.[ch]pp"  >> ${FILE_LIST}
  
  if [ ${FIX_MODE} -eq 1 ]
  then
    while read line
    do
      clang-format -i ${line}
    done < ${FILE_LIST}
  elif [ ${REVIEW_MODE} -eq 1 ]
  then
    while read line
    do
      if [ ! -z "$(clang-format ${line} | diff -u --from-file=${line} -)" ]
      then
        clang-format ${line} | diff -u --from-file=${line} - | view -
      fi
    done < ${FILE_LIST}
  elif [ ${SIMULATE_MODE} -eq 1 ]
  then
    while read line
    do
      clang-format ${line} | diff -u --from-file=${line} -
    done < ${FILE_LIST}
  fi
  
  rm -f ${FILE_LIST}
}

parseCommandline $@
checkForConfigurationFile
runClangFormat

exit 0
